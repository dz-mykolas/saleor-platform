# docker-compose.yml

services:
  api:
    image: ghcr.io/saleor/saleor:3.20
    ports:
      - 8000:8000
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    stdin_open: true
    tty: true
    depends_on:
      - db
      - redis
      - jaeger
    env_file:
      - common.env
      - backend.env
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - DASHBOARD_URL=https://${DASHBOARD_DOMAIN}
      - ALLOWED_HOSTS=localhost,api,${PUBLIC_DOMAIN}
      - ALLOWED_CLIENT_HOSTS=https://${DASHBOARD_DOMAIN}
      - PUBLIC_URL=https://${PUBLIC_DOMAIN}
      - DEBUG=True
      - RSA_PRIVATE_KEY=${RSA_PRIVATE_KEY}
        # Amazon S3 configuration
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SECURITY_TOKEN=${AWS_SECURITY_TOKEN}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL}

      - AWS_QUERYSTRING_AUTH=${AWS_QUERYSTRING_AUTH}
      - AWS_S3_VERIFY=${AWS_S3_VERIFY}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
      - AWS_S3_SIGNATURE_VERSION=${AWS_S3_SIGNATURE_VERSION}
      - AWS_MEDIA_CUSTOM_DOMAIN=${AWS_MEDIA_CUSTOM_DOMAIN}
      - AWS_STATIC_CUSTOM_DOMAIN=${AWS_STATIC_CUSTOM_DOMAIN}

      - AWS_MEDIA_BUCKET_NAME=${AWS_MEDIA_BUCKET_NAME}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}

  dashboard:
    image: ghcr.io/saleor/saleor-dashboard:latest
    ports:
      - 9000:80
    restart: unless-stopped
    networks:
      - saleor-fronted-tier
    environment:
      - API_URL=https://${PUBLIC_DOMAIN}/graphql/
      - APPS_MARKETPLACE_API_URL=${APPS_MARKETPLACE_API_URL}
      - APP_MOUNT_URI=${APP_MOUNT_URI}
      - DEMO_MODE=${DEMO_MODE}

  db:
    image: library/postgres:15-alpine
    ports:
      - 5432:5432
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    volumes:
      - saleor-db:/var/lib/postgresql/data
      - ./replica_user.sql:/docker-entrypoint-initdb.d/replica_user.sql
    environment:
      - POSTGRES_USER=saleor
      - POSTGRES_PASSWORD=saleor

  redis:
    image: library/redis:7.0-alpine
    ports:
      - 6379:6379
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    volumes:
      - saleor-redis:/data

  worker:
    image: ghcr.io/saleor/saleor:3.20
    command: celery -A saleor --app=saleor.celeryconf:app worker --loglevel=info -B
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    env_file:
      - common.env
      - backend.env
    depends_on:
      - redis
      - mailpit

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    volumes:
      - type: tmpfs
        target: /tmp

  mailpit:
    image: axllent/mailpit
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui. Visit http://localhost:8025/ to check emails
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    
  caddy:
    build:
      context: ./dockerfile-dns
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    environment:
      MY_DOMAIN: ${MY_DOMAIN:?Domain is required}
      CLOUDFLARE_API_TOKEN: ${CLOUDFLARE_API_TOKEN:?Cloudflare API token is required}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - saleor-caddy_data:/data
      - saleor-caddy_config:/config
      - saleor-media:/app/media
    networks:
      - saleor-backend-tier
      - saleor-fronted-tier

volumes:
  saleor-db:
    driver: local
  saleor-redis:
    driver: local
  saleor-media:
  saleor-caddy_data:
  saleor-caddy_config:

networks:
  saleor-backend-tier:
    driver: bridge
  saleor-fronted-tier:
    driver: bridge
